stages:
  - build
  - create-image
  - production-release

variables:
  DOCKER_BUILDKIT: 1

.create_multi_arch_image:
  image: docker:latest
  services:
   - name: docker:dind
     command: ["--experimental"]
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - apk add curl
    - mkdir -vp ~/.docker/cli-plugins/
    - curl --silent -L "https://github.com/docker/buildx/releases/download/v0.5.1/buildx-v0.5.1.linux-amd64" > ~/.docker/cli-plugins/docker-buildx
    - chmod a+x ~/.docker/cli-plugins/docker-buildx
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --use
    - docker buildx inspect --bootstrap

maven-build:
  image: maven:openjdk
  stage: build
  script: "mvn clean compile assembly:single"
  artifacts:
    paths:
      - target/*.jar
  only:
    - master
    - tags

create-latest-image:
  extends: .create_multi_arch_image
  stage: create-image
  script:
    - docker buildx build --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN --push --platform linux/amd64,linux/arm64 -t $CI_REGISTRY_IMAGE:latest .
    - docker manifest inspect $CI_REGISTRY_IMAGE:latest
  only:
    - master

create-versioned-image:
  extends: .create_multi_arch_image
  stage: production-release
  script:
    - docker buildx build --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN --push --platform linux/amd64,linux/arm64 -t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG .
    - docker manifest inspect $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  only:
    - tags
